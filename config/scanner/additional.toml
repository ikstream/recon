# some additional scans/tools you could run.
# they were part of the default config ('scanner.toml'),
# but have been deactivated (e.g. '#feroxbuster ...').

[[services]]
name = 'http'

[[services.scans]]
name = 'cewl'
transport_protocol = 'tcp'
command = 'cewl --depth 3 --min_word_length 5 --write "{result_file}.log" {scheme}://$([[ "{address_type}" == "IPv6" ]] && echo "[{hostname}]" || echo "{hostname}"):{port}'

[[services.scans]]
name = 'feroxbuster'
transport_protocol = 'tcp'
command = 'feroxbuster --insecure --quiet --depth 1 --extensions txt,html,php,asp,aspx,jsp --wordlist /usr/share/seclists/Discovery/Web-Content/common.txt --url {scheme}://$([[ "{address_type}" == "IPv6" ]] && echo "[{hostname}]" || echo "{hostname}"):{port}/ 2>&1 | tee "{result_file}.log"'

[[services.scans]]
name = 'gobuster'
transport_protocol = 'tcp'
command = 'gobuster dir --url {scheme}://$([[ "{address_type}" == "IPv6" ]] && echo "[{hostname}]" || echo "{hostname}"):{port}/ --wordlist /usr/share/seclists/Discovery/Web-Content/common.txt --no-progress --no-tls-validation --expanded --extensions "txt,html,php,asp,aspx,jsp" 2>&1 | tee "{result_file}.log"'

[[services]]
name = 'smtp'

[[services.scans]]
name = 'nmap#intrusive'
command = 'nmap -Pn -sV -p {port} --script="banner,smtp* and not (brute or dos or exploit)" -oN "{result_file}.log" -oX "{result_file}.xml" {address}'

[[services]]
name = 'snmp'

[[services.scans]]
name = 'onesixtyone'
command = 'onesixtyone -c /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings-onesixtyone.txt -dd {address} 2>&1 | tee "{result_file}.log"'

[[services.scans]]
name = 'snmpwalk'
command = 'declare -a OIDs=(1.3.6.1.2.1.25.1.6.0 1.3.6.1.2.1.25.4.2.1.2 1.3.6.1.2.1.25.4.2.1.4 1.3.6.1.2.1.25.2.3.1.4 1.3.6.1.2.1.25.6.3.1.2 1.3.6.1.4.1.77.1.2.25 1.3.6.1.2.1.6.13.1.3); for OID in "${{OIDs[@]}}"; do snmpwalk -c public -v 1 {address} $OID 2>&1 | tee --append "{result_file}.log"; echo "scanned OID $OID"; done; snmpwalk -c public -v 1 {address} 2>&1 | tee --append "{result_file}.log"'

[[services]]
name = 'tls'
# services (or service versions) that use TLS by default (i.e. not opportunistic).

[[services.scans]]
name = 'sslscan'
# https://github.com/rbsec/sslscan/blob/master/sslscan.1
transport_protocol = 'tcp'
command = 'sslscan --show-certificate --ocsp --show-sigs --xml="{result_file}.xml" $([[ "{address_type}" == "IPv6" ]] && echo "[{hostname}]" || echo "{hostname}"):{port} 2>&1 | tee "{result_file}.log"'

[[services.scans]]
name = 'sslyze'
# https://github.com/nabla-c0d3/sslyze/blob/release/sslyze/cli/command_line_parser.py
transport_protocol = 'tcp'
command = 'sslyze --json_out "{result_file}.json" $([[ "{address_type}" == "IPv6" ]] && echo "[{hostname}]" || echo "{hostname}"):{port} 2>&1 | tee "{result_file}.log"'

[[services]]
name = 'tls-misc'
# services that support opportunistic TLS (e.g. STARTTLS) or use TLS in some other form

[[services.scans]]
name = 'sslscan'
# https://github.com/rbsec/sslscan/blob/master/sslscan.1
transport_protocol = 'tcp'
application_protocol = 'ftp|imap|ircu?|ldap|pop3|smtp|mysql|postgresql|xmpp'
command = 'sslscan --show-certificate --show-sigs --starttls-$(echo "{application_protocol}" | sed "s:ircu:irc:" | sed "s:postgresql:psql:") --xml="{result_file}.xml" $([[ "{address_type}" == "IPv6" ]] && echo "[{address}]" || echo "{address}"):{port} 2>&1 | tee "{result_file}.log"'

[[services.scans]]
name = 'sslyze'
# https://github.com/nabla-c0d3/sslyze/blob/release/sslyze/cli/command_line_parser.py
transport_protocol = 'tcp'
application_protocol = 'smtp|xmpp|xmpp_server|pop3|imap|ftp|ldap|ms-wbt-server|postgresql'
command = 'sslyze --starttls $(echo "{application_protocol}" | sed "s:ms-wbt-server:rdp:" | sed "s:postgresql:postgres:") --json_out "{result_file}.json" $([[ "{address_type}" == "IPv6" ]] && echo "[{address}]" || echo "{address}"):{port} 2>&1 | tee "{result_file}.log"'

